<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<http pattern="/resources" security="none" />

	<http auto-config="false" use-expressions="true"
		entry-point-ref="authenticationEntryPoint">
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/denied" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/user" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />


		<logout invalidate-session="true" logout-success-url="/logout/success"
			logout-url="/logout" />

		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />

	</http>

	<!-- Custom filter for username and password. The real customization is 
		done in the customAthenticationManager -->
	<beans:bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="customAuthenticationManager"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />

	<!-- Custom authentication manager. In order to authenticate, username and 
		password must not be the same -->
	<beans:bean id="customAuthenticationManager"
		class="com.sungard.proc.manager.CustomAuthenticationManager" />

	<!-- default failure url here -->
	<beans:bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
		p:defaultFailureUrl="/login/failure" />

	<!-- default target url here -->
	<beans:bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
		p:defaultTargetUrl="/" />

	<!-- responsible for redirecting the user 
		to a particular page, like a login page, whenever the server sends back a 
		response requiring authentication -->
	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/login" />


	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>